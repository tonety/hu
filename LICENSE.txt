Citui@gg.com

mkdir repository		   #创建版本库
pwd  					   #显示当前目录
git init				   #把目录编程git可以管理的仓库
git diff				   #查看修改了文件的什么内容
git status				   #查看当前仓库状态
git add file               #添加修改后的文件到暂存区
git commit -m "修改说明"   #把暂存区的内容提交到版本库
git checkout -- myfile.txt #清除工作区的内容		
						  #误删文件，而版本库还有记录
git reset HEAD myfile.txt  #把暂存区的内容回滚到工作区
git reset --head HEAD^     #把版本库回退到上一个版本
git log					   #查看历史记录
git log --pretty=oneline   #按行显示历史记录
git reflog				   #显示历史commit id
git rm myfile.txt		   #删除文件
git checkout -b <name>     #创建并切换分支
git checkout <name>        #切换分支
git branch				   #查看分支
git branch <name>		   #创建分支
git merge <name>		   #合并分支
git branch -d <name>       #删除分支
git log -- graph		   #查看分支合并图
git stash		           #把当前工作先场的内容'储藏'起来
git stash list			   #查看已'储藏'的列表
git stash pop			   #把'储藏'的内容恢复，并删除列表
git stash apply			   #把'储藏'的内容恢复，不删除列表
git stash drop			   #删除'储藏'列表
git stash apply stash@{0}  #指定恢复内容
git branch -D <name>	   #强行删除一个还没合并的分支
git remote -v			   #查看远程库信息
git clone git@github.com:tonety/hu.git#克隆远程库
git push origin branch-name#从本地向远程库推送分支
git pull 				   #拉取远程库，并试图合并

#多人协作的工作模式
#1.远程库里要有对应的branch-name,最好和本地branch-name一样
#2.用git branch --set-upstream branch-name origin/branch-name 建立本地分支和远程分支的链接关系(如果创建过则跳过)
#3.试图git push origin branch-name推送自己的修改
#4.推送失败，则是远程分支比本地的更新，需要git pull试图合并
#5.如果合并冲突，则解决冲突，并在本地提交
#6.没有冲突或者解决冲突后，git push origin branch-name推送



